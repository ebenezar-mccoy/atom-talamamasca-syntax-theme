@import "./styles/base.less";

@brownish: rgba(229, 173, 148, 0.96);
@redish: #da4939;
@lightgreen: #a5c261;
@darkgreen: #429965;
@lightblue: #6e9cbe;
@yellowish: #e8bf6a;
@greenish: #519f50;
@purpleish: saturate(darken(rgb(204,206,255), 1), 3);

.syntax--comment {
  font-style: italic;
}

.syntax--entity {
  // Ruby Slim : classes of div like .column
  &.syntax--name.syntax--tag,
  &.syntax--other.syntax--attribute-name {
    color: @yellowish;
  }

  &.syntax--name.syntax--tag,
  // Class name in "class TheClass" definition
  &.syntax--name.syntax--type {
    text-decoration: none;
  }
  &.syntax--other.syntax--inherited-class {
    color: darken(@yellowish, 15)
  }
}

.syntax--keyword {
  color: @brownish;

  &.syntax--control {
    color: @brownish;
  }

  &.syntax--operator {
    color: @brownish;
  }

  // Language keywords : initialize raise private attr_reader etc...
  &.syntax--other.syntax--special-method {
    color: @brownish;
  }

  &.syntax--other.syntax--unit {
    color: @orange;
  }
}

.syntax--string {
  // Text inside strings
  //color: @lightgreen;
  color: #8BB664;

  // All text inside the regexps
  &.syntax--regexp {
    color: @darkgreen;
  }

  &.syntax--other.syntax--link {
    color: @blue;
  }

  // Ruby code inside a string
  .syntax--source {
    color: @darkgreen;
  }
}

.syntax--storage {
  color: #99CF50;
}

// In ruby that is "true" or "false" or "nil"
// Also ":" for hashes keys, symbols
.syntax--constant {
  color: #3C98D9;

  &.syntax--numeric {
    color: #3C98D9;
  }

  // Ruby symbols (only the text inside)
  &.syntax--other.syntax--symbol {
    color: #3C98D9;
  }

  // CAPS constants
  // Also, classes names passed as arguments. Ex: include ThisClass
  &.syntax--other.syntax--variable {
    color: @blue;
  }

  &.syntax--character.syntax--escape {
    color: white;
  }

  &.syntax--other.syntax--color {
    color: @lightblue;
  }
}


// Comments ! Of course ! :-)
.syntax--comment {
  color: darken(@syntax-text-color, 32);
  font-style: italic;

  // The signs before comments : # or // or /*
  &.syntax--punctuation.syntax--definition {
    color: darken(@syntax-text-color, 42);
  }
}


.syntax--punctuation {
  // Ruby < symbol class inheritance
  &.syntax--inheritance {
    &.syntax--variable {
      color: @brownish;
    }
  }

  &.syntax--definition {
    // Quotes surrounding a string
    &.syntax--string {
      color: darken(@lightgreen, 15);
    }

    // Parenthesis surrounding a function's params
    &.syntax--parameters {
      color: darken(@syntax-text-color, 20);
    }

    // Ruby << symbol for inheritance like in "class << self"
    &.syntax--variable {
      color: @brownish;
    }
  }

  // Ruby embed code in a Slim template
  // Example : #id This embed #{ ruby_code(42) } informations !
  &.syntax--section.syntax--embedded {
    color: @blue;
  }
}

// The | character in a lambda's params for instance
.syntax--variable {
  color: @lightblue;

  // The instance variable name
  &.syntax--instance,
  // The @ sign before the instance variable name
  .syntax--punctuation.syntax--variable {
    color: @purpleish;
  }

  // The | character in lambda's params
  &.syntax--punctuation.syntax--separator {
    color: darken(@syntax-text-color, 20);
  }

  // Block params, between the two pipes, like |variable|
  &.syntax--other.syntax--block {
    color: @syntax-text-color;
  }

  &.syntax--interpolation {
    color: @purpleish;
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }

  &.syntax--language.syntax--self {
    color: darken(@syntax-text-color, 20);
  }
}

.syntax--support {
  // Ruby constants in caps
  // Class names
  &.syntax--class {
    color: @blue;
  }

  // Method calls like "render", "content_for", etc. in rails' views
  // or select gsub etc... in ruby code
  //
  // Somewhere in the CSS there is an !important on .syntax--support.syntax--function
  // I can't find it but it overwrite this rule
  &.syntax--function {
    color: #DAD085 !important;
  }
}

.syntax--support.syntax--function.syntax--kernel.syntax--ruby {
  color: @purpleish;
}

atom-text-editor .line.folded {
  border-bottom: 1px dashed salmon;  // Mmm.. salmon..
}


// codeschool


.editor.is-focused .cursor {
  border-color: #9EA7A6;
}

.editor.is-focused .selection .region {
  background-color: rgb(75, 90, 99);
}

.editor .selection .region {
background-color: rgb(75, 90, 99);
}

.editor.is-focused .line-number.cursor-line-no-selection, .editor.is-focused .line.cursor-line {
  background-color: #4B5A63;
}

.syntax--comment {
  font-style: italic;
  color: #9A9A9A;
}

.syntax--constant {
  color: #3C98D9;
}

.syntax--entity {
  color: #BCDBFF;
}

.syntax--keyword {
  color: rgba(229, 173, 148, 0.96);
}

.syntax--storage {
  color: #99CF50;
}

.syntax--string {
  color: #8BB664;
}

.syntax--support {
  color: #BFABCB;
}

.syntax--variable {
  color: #68A9EB;
}

.syntax--invalid.syntax--deprecated {
  font-style: italic;
  text-decoration: underline;
  color: #FD5FF1;
}

.syntax--invalid.syntax--illegal {
  color: #FD5FF1;
  background-color: rgba(86, 45, 86, 0.75);
}

.syntax--text .syntax--source {
  background-color: rgba(177, 179, 186, 0.03);
}

.syntax--entity.syntax--other.syntax--inherited-class {
  color: #FBFFF7;
}

.syntax--string.syntax--quoted .syntax--source {
  color: #DAEFA3;
}

.syntax--string .syntax--constant {
  color: #DDF2A4;
}

.syntax--string.syntax--regexp {
  color: #E9C062;
}

.syntax--string.syntax--regexp .syntax--constant.syntax-character.syntax-escape, .syntax--string.syntax--regexp .syntax--source.syntax--ruby.syntax--embedded, .syntax--string.syntax--regexp .syntax--string.syntax--regexp.syntax--arbitrary-repitition {
  color: #CF7D34;
}

.syntax--string .syntax--variable {
  color: #E1EBBB;
}

.syntax--support.syntax--function {
  color: #DAD085;
}

.syntax--support.syntax--constant {
  color: #A7CFA3;
}

.syntax--meta.syntax--preprocessor.syntax--c {
  color: #8996A8;
}

.syntax--meta.syntax--preprocessor.syntax--c .syntax--keyword {
  color: #AFC4DB;
}

.syntax--entity.syntax--name.syntax--type {
  text-decoration: underline;
  color: #B5D8F6;
}

.syntax--meta.syntax--cast {
  font-style: italic;
  color: #676767;
}

.syntax--meta.syntax--sgml.syntax--html .syntax--meta.syntax-doctype, .syntax--meta.syntax--sgml.syntax--html .syntax--meta.syntax-doctype .syntax--entity, .syntax--meta.syntax--sgml.syntax--html .syntax--meta.syntax-doctype .syntax--string, .syntax--meta.xml-processing, .syntax--meta.xml-processing .syntax--entity, .syntax--meta.xml-processing .syntax--string {
  color: #494949;
}

.syntax--meta.syntax--tag, .syntax--meta.syntax--tag .syntax--entity {
  color: #89BDFF;
}

.syntax--source .syntax--entity.syntax--name.syntax--tag, .syntax--source .syntax--entity.syntax--other.syntax--attribute-name, .syntax--meta.syntax--tag.syntax--inline, .syntax--meta.syntax--tag.syntax--inline .syntax--entity {
  color: #E0C589;
}

.syntax--entity.syntax--name.syntax--tag.syntax--namespace, .syntax--entity.syntax--other.syntax--attribute-name.syntax--namespace {
  color: #E18964;
}

.syntax--meta.syntax--selector.syntax--css .syntax--entity.syntax--name.syntax--tag {
  color: #CDA367;
}

.syntax--meta.syntax--selector.syntax--css .syntax--entity.syntax--other.syntax--attribute-name.syntax--tag.syntax--pseudo-class {
  color: #8F9D6A;
}

.syntax--meta.syntax--selector.syntax--css .syntax--entity.syntax--other.syntax--attribute-name.syntax--id {
  color: #918BAB;
}

.syntax--meta.syntax--selector.syntax--css .syntax--entity.syntax--other.syntax--attribute-name.syntax--class {
  color: #DED087;
}

.syntax--support.syntax--type.syntax--property-name.syntax--css {
  color: #C3C5B5;
}

.syntax--meta.syntax--property-group .syntax--support.syntax--constant.syntax--property-value.syntax--css, .syntax--meta.syntax--property-value .syntax--support.syntax--constant.syntax--property-value.syntax--css {
  color: #F9EFC4;
}

.syntax--meta.syntax--preprocessor.syntax--at-rule .syntax--keyword.syntax--control.syntax--at-rule {
  color: #8693A5;
}

.syntax--meta.syntax--property-value .syntax--support.syntax--constant.named-color.syntax--css, .syntax--meta.syntax--property-value .syntax--constant {
  color: #DDB8AB;
}

.syntax--meta.syntax--constructor.syntax--argument.syntax--css {
  color: #8F9D6A;
}

.syntax--meta.syntax--diff, .syntax--meta.syntax--diff.syntax--header {
  font-style: italic;
  color: #F8F8F8;
  background-color: #0E2231;
}

.syntax--markup.syntax--deleted {
  color: #F8F8F8;
  background-color: #420E09;
}

.syntax--markup.syntax--changed {
  color: #F8F8F8;
  background-color: #4A410D;
}

.syntax--markup.syntax--inserted {
  color: #F8F8F8;
  background-color: #253B22;
}

.syntax--markup.syntax--italic {
  font-style: italic;
  color: #E9C062;
}

.syntax--markup.syntax--bold {
  font-weight: bold;
  color: #E9C062;
}

.syntax--markup.syntax--underline {
  text-decoration: underline;
  color: #E18964;
}

.syntax--markup.syntax--quote {
  font-style: italic;
  color: #E1D4B9;
  background-color: rgba(254, 224, 156, 0.07);
}

.syntax--markup.syntax-.syntax--heading, .syntax--markup.syntax-.syntax--heading .syntax--entity {
  color: #FEDCC5;
  background-color: #632D04;
}

.syntax--markup.syntax--list {
  color: #E1D4B9;
}

.syntax--markup.syntax--raw {
  color: #578BB3;
  background-color: rgba(177, 179, 186, 0.03);
}

.syntax--markup .syntax--comment {
  font-style: italic;
  color: #F67B37;
}

.syntax--meta.syntax--separator {
  color: #60A633;
  background-color: #242424;
}

.syntax--meta.line.syntax--entry.logfile, .syntax--meta.line.syntax--exit.logfile {
  background-color: rgba(238, 238, 238, 0.16);
}

.syntax--meta.line.syntax--error.logfile {
  background-color: #751012;
}

atom-text-editor .line.folded {
  border-bottom: 1px dashed salmon;  // Mmm.. salmon..
}

atom-text-editor .line-number.folded {
  border-bottom: none;
}

atom-text-editor .fold-marker {
  display: none;
}

.editor .gutter .foldable .icon-right {
    visibility: visible;
}

.indent-guide-improved {
  &.indent-guide-stack {
    background: repeating-linear-gradient(to bottom, rgba(158, 158, 158, 0.2), rgba(0, 0, 0, 0) 2px );

    &.indent-guide-active {
      background: repeating-linear-gradient(to bottom, rgb(1, 162, 226), rgba(0, 0, 0, 0) 2px );
    }
  }
  background: repeating-linear-gradient(to bottom, rgba(158, 158, 158, 0.2), rgba(0, 0, 0, 0) 2px );
}


atom-text-editor {
  & {
    .gutter .line-number {
      min-width: 4.5ch; // 4.5 and not 2 because there's something else there, too
    }
  }
}

.tree-view {
    font-size: 1em;
    color: #878F93;
    background: #22323A;
}

.tab-bar {
  font-size: 10px; // smaller font size
  height: 34px;
  padding: 0;

  .syntax--tab {
    -webkit-transform: none;
    top: 2px;
    line-height: 25px;
    min-width: 1em; // larger minimum width
    max-width: 16em; // smaller max width

    &.active {
      height: 25px;

      &:before {
        height: 25px;
      }
    }

    &:before {
      -webkit-transform: none;
      width: 18px;
    }

    .close-icon {
      -webkit-transform: none;
      line-height: 25px;
    }

    .syntax--title {
      -webkit-transform: none;
    }
  }
}

span.icon-file-directory:before {
  color: #2282C0;
}

span.icon-repo{
  color: #2282C0;
}

atom-dock .tab-bar {
  display: none;
}
